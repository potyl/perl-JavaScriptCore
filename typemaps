TYPEMAP
JSGlobalContext  T_JS_GLOBAL_CONTEXT
JSContextGroup   T_JS_CONTEXT_GROUP
JSContext        T_JS_CONTEXT
JSPValue*        T_JSP_VALUE

INPUT

T_JS_GLOBAL_CONTEXT
     if (!jsc_perl_sv_is_ref($arg)) {
          $var = NULL;
     }
     else {
          $var = INT2PTR($type, SvIV(SvRV($arg)));
     }


T_JS_CONTEXT_GROUP
     if (!jsc_perl_sv_is_ref($arg)) {
          $var = NULL;
     }
     else {
          $var = INT2PTR($type, SvIV(SvRV($arg)));
     }


T_JS_CONTEXT
     if (!jsc_perl_sv_is_ref($arg)) {
          $var = NULL;
     }
     else {
          $var = INT2PTR($type, SvIV(SvRV($arg)));
     }


T_JSP_VALUE
     if (!jsc_perl_sv_is_ref($arg)) {
          $var = NULL;
     }
     else {
          $var = INT2PTR($type, SvIV(SvRV($arg)));
     }


OUTPUT

T_JS_GLOBAL_CONTEXT
     sv_setref_pv($arg, \"JavaScriptCore::JSGlobalContext\", (void * const) $var);
     JSGlobalContextRetain($var);


T_JS_CONTEXT_GROUP
     sv_setref_pv($arg, \"JavaScriptCore::JSContextGroup\", (void * const) $var);
     JSContextGroupRetain($var);


T_JS_CONTEXT
     sv_setref_pv($arg, \"JavaScriptCore::JSContext\", (void * const) $var);
     JSGlobalContextRetain((JSGlobalContextRef) $var);


T_JSP_VALUE
     sv_setref_pv($arg, \"JavaScriptCore::JSValue\", (void * const) $var);
     JSGlobalContextRetain((JSGlobalContextRef) $var->ctx);
     JSValueProtect(ctx, $var->val);

